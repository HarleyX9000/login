# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VzTqg1Ol7Wa5EsxjX7FnricfNGg7yJip
"""

import pandas as pd
from sklearn.neighbors import NearestNeighbors
from sklearn.preprocessing import StandardScaler

# Cargar datasets con encoding='latin1' porque me salia error utf-8
credits = pd.read_csv("/content/tmdb_5000_credits.csv", encoding='latin1')
movies = pd.read_csv("/content/tmdb_5000_movies.csv", encoding='latin1')

# Unir datasets por "movie_id" y "id", cambie id por movie_id
movies = movies.rename(columns={'id': 'movie_id'})
data = pd.merge(movies, credits, on='movie_id')

# Seleccionar columnas relevantes para el filtrado colaborativo
collab_data = data[['movie_id', 'vote_average', 'vote_count']].copy()

# Rellenar NaN en 'vote_count' con cero para evitar problemas con la estandarización
collab_data['vote_count'] = collab_data['vote_count'].fillna(0)

# Estandarizar las columnas 'vote_average' y 'vote_count'
scaler = StandardScaler()
collab_data[['vote_average', 'vote_count']] = scaler.fit_transform(collab_data[['vote_average', 'vote_count']])

# Crear modelo de vecinos más cercanos con nombres de características
model = NearestNeighbors(n_neighbors=10, metric='cosine', algorithm='brute', n_jobs=-1)  # n_jobs=-1 para usar todos los núcleos de CPU
model.fit(collab_data[['vote_average', 'vote_count']])

# Función para obtener recomendaciones
def get_recommendations(movie_title):
    movie_id = data[data['title_x'].str.lower() == movie_title.lower()]['movie_id'].values[0]
    movie_features = collab_data[collab_data['movie_id'] == movie_id][['vote_average', 'vote_count']]
    movie_features_scaled = scaler.transform(movie_features)

    # Encontrar vecinos más cercanos
    _, indices = model.kneighbors(movie_features_scaled)

    # Obtener títulos de las películas recomendadas
    recommended_movies = [data['title_x'].iloc[i] for i in indices[0][1:]]  # Excluir la película de entrada

    return recommended_movies

# Ejemplo de uso
movie_title_input = input("Ingrese el título de la película: ")
recommendations = get_recommendations(movie_title_input)
print(recommendations)